{
    Point := struct {
        mut x: number; // if you omit the mut keyword you can only set the value once on construction
        mut y: number; 
    }

    x := 5;
    y := 7;

    p := Point {
        x = 5,
        y = 5,
    };

    p2 := Point {x, y};
}

{
    Vec3 := struct {
        mut x := 0; // You can define default values so not all values are requiered when creating an instance
        mut y := 0;
        mut z := 0;
    }

    dot := (self: Vec3, other: Vec3): number => {
        return self.x * other.x + self.y * other.y + self.z * other.z;
    }

    v1 := Vec3 {x = 1}; // this will be x=1, y=0, z=0
    v2 := Vec3 {y = 1}; // this will be x=0, y=1, z=0

    // Use bind syntax to call the function
    result1 := v1::dot(v2);

    // this is the same as above
    result2 := dot(v1, v2);
}

{
    Boxed<T> := struct {
        mut value: T;
    }

    box := Boxed {
        value = 42,
    }
}